name: CI/CD Pipeline

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v2

    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: 3.8

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt

    - name: Build Docker image
      run: docker build -t crud-api:'${{github.sha}}' .

    - name: Log in to Docker Hub
      run: docker login -u ${{ secrets.SECRET_USERNAME}} -p ${{ secrets.SECRET_PASS}}

    - name: tag docker image
      run: docker tag crud-api:'${{github.sha}}' '${{ secrets.SECRET_USERNAME }}'/crud-api:'${{github.sha}}'

    - name: Push Docker image
      run: docker push '${{ secrets.SECRET_USERNAME }}'/crud-api:'${{github.sha}}'
      
    - uses: azure/login@v1
      with:
        creds: ${{ secrets.SECRET_AZURE_CRE }}
    - name: Set up Terraform
      uses: hashicorp/setup-terraform@v1
      with:
        terraform_version: 1.0.0
          
    - name: Terraform init
      run: terraform init
      
    - name: Terraform apply
      run: terraform apply -auto-approve -var "aks_cluster_name=${{ vars.AKS_CLUSTER_NAME }}" -var "resource_group=${{ vars.RESOURCE_GROUP }}" -var "AZURE_CLIENT_ID=${{ vars.AZURE_CLIENT_ID }}" -var "AZURE_CLIENT_SECRET=${{ secrets.AZURE_CLIENT_SECRET }}"
      env:
        AZURE_CREDENTIALS: ${{ secrets.SECRET_AZURE_CRE }}

    - name: Connect to AKS
      uses: andersbea/connect-to-aks@v1.0.0
      with:
        CREDENTIALS: '${{ secrets.SECRET_AZURE_CRE }}'
        RESOURCE_GROUP: ${{ vars.RESOURCE_GROUP }}
        CLUSTER: ${{ vars.AKS_CLUSTER_NAME }}
        
    - name: assignee role
      run: az role assignment create --assignee 8826a619-e971-421c-8230-cac671d17289 --role "Azure Kubernetes Service Contributor Role" --scope /subscriptions/595cde91-1448-4867-beca-c97b439bbc31/resourceGroups/test_env/providers/Microsoft.ContainerService/managedClusters/pythondeploy12
    
    - name: Deploy to AKS
      env:
        AZURE_CREDENTIALS: ${{ secrets.SECRET_AZURE_CRE }}
      run: |
        curl -LO https://aka.ms/InstallAzureCLIDeb
        sudo bash InstallAzureCLIDeb
        az login --service-principal -u ${{ secrets.AZURE_CLIENT_ID }} -p ${{ secrets.AZURE_CLIENT_SECRET }} --tenant ${{ secrets.AZURE_TENANT_ID }}
        az aks get-credentials --resource-group ${{ vars.RESOURCE_GROUP }} --name ${{ vars.AKS_CLUSTER_NAME }}
        kubectl apply -f k8s/deployment.yaml
        kubectl apply -f k8s/service.yaml
